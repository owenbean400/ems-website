{"version":3,"file":"component---src-pages-documentation-main-setting-window-mdx-23cf8f4850a7a9b594c2.js","mappings":"kLA+DA,MA5DgB,SAACA,GACf,IAAMC,GAAOC,EAAAA,EAAAA,IAAe,aAgB5B,OACE,yBACEC,MAAO,CACLC,MAAOJ,EAAMK,QAAU,QAAU,MACjCC,QAASN,EAAMK,QAAU,OAAS,WAClCE,UAAWP,EAAMK,QACb,mCACA,oCAGN,sBACEF,MAAO,CACLK,QAASR,EAAMK,QAAU,SAAW,SAGtC,0BACE,gBAAC,KAAD,CAAMI,GAAG,kBAAT,kBAEDR,EAAKS,QAAQC,MAAMC,KAAI,SAACC,GAAD,OACtB,0BACE,gBAAC,KAAD,CAAMJ,IAUUK,EAVaD,EAAME,aAWtCD,EAAKE,UAAUF,EAAKG,QAAQ,WAAa,EAAGH,EAAKG,QAAQ,QAVrCJ,EAAMK,KAe9BC,MAAM,KACNP,KAAI,SAACC,GACJ,OAAOA,EAAMO,OAAO,GAAGC,cAAgBR,EAAMG,UAAU,MAExDM,KAAK,OANV,IAJ4BR,QCyC5B,EAvFe,SAAC,GAAkB,IAAhBS,EAAe,EAAfA,SAChB,GAAsCC,EAAAA,EAAAA,WAAS,GAAxCC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAApCG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,SAASC,IACPC,QAAQC,IAAIC,OAAOC,YACnBR,EAAeO,OAAOC,WAAa,KACnCN,EAAaK,OAAOC,YAAc,KAOpC,OAJAD,OAAOE,iBAAiB,SAAUL,GAElCA,IAEO,kBAAMG,OAAOG,oBAAoB,SAAUN,MACjD,IAGD,2BACE,2BACE,oDAEF,uBACEO,GAAG,YACHlC,MAAO,CACLmC,MAAOb,EAAc,QAAU,OAC/BjB,QAASmB,EAAY,OAAS,QAEhCY,QAAS,WACPb,GAAgBD,KAGlB,uBACEY,GAAG,QACHG,MAAM,6BACNC,QAAQ,eAER,4BACE,0BACEJ,GAAG,aACHK,YAAY,KACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,QAEP,2BACEC,OAAO,oBACPC,KAAMvB,EAAc,OAAS,aAGjC,0BACEY,GAAG,WACHK,YAAY,KACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,OACPG,YAAY,eAEZ,2BACEF,OAAO,mBACPC,KAAMvB,EAAc,UAAY,WAItC,wBACEyB,GAAG,MACHC,GAAG,KACHC,GAAG,MACHC,GAAG,KACHC,OAAO,OACP,eAAa,IACb,aAAW,iBACX,eAAa,uBAInB,4BACE,+BAAU/B,GACV,gBAAC,EAAD,CAASlB,QAASoB,Q,iKC7Eb8B,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACG5D,GACF,YACD,OAAO,QAACyD,EAAD,iBAAeD,EAAiBxD,EAAhC,CAAuC4D,WAAYA,EAAYC,QAAQ,eAG5E,sCACA,wMAKJF,EAAWG,gBAAiB,G,qBC1Bb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAAShD,QAAQiD,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://ems-documentation/./src/components/sidebar.js","webpack://ems-documentation/./src/components/Layout.js","webpack://ems-documentation/./src/pages/documentation/main/setting-window.mdx","webpack://ems-documentation/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from \"react\";\r\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\r\n\r\nconst SideBar = (props) => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query FileSort {\r\n        allFile(\r\n          sort: { fields: sourceInstanceName }\r\n          filter: { ext: { eq: \".mdx\" } }\r\n        ) {\r\n          nodes {\r\n            absolutePath\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  return (\r\n    <aside\r\n      style={{\r\n        width: props.isShown ? \"240px\" : \"0px\",\r\n        padding: props.isShown ? \"16px\" : \"16px 0px\",\r\n        boxShadow: props.isShown\r\n          ? \"0px 0px 5px 3px rgba(0,0,0,0.33)\"\r\n          : \"0px 0px 0px 0px rgba(0,0,0,0.0)\",\r\n      }}\r\n    >\r\n      <ul\r\n        style={{\r\n          display: props.isShown ? \"inline\" : \"none\",\r\n        }}\r\n      >\r\n        <li>\r\n          <Link to=\"/documentation\">Documentation</Link>\r\n        </li>\r\n        {data.allFile.nodes.map((value) => (\r\n          <li>\r\n            <Link to={absolutePathToLink(value.absolutePath)}>\r\n              {nameToDisplay(value.name)}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nfunction absolutePathToLink(path) {\r\n  return path.substring(path.indexOf(\"/pages/\") + 6, path.indexOf(\".\"));\r\n}\r\n\r\nfunction nameToDisplay(name) {\r\n  return name\r\n    .split(\"-\")\r\n    .map((value) => {\r\n      return value.charAt(0).toUpperCase() + value.substring(1);\r\n    })\r\n    .join(\" \");\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SideBar from \"./sidebar\";\r\nimport \"../style/markdown.sass\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const [displaySide, setDisplaySide] = useState(true);\r\n  const [phoneSize, setPhoneSize] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      console.log(window.innerWidth);\r\n      setDisplaySide(window.innerWidth > 768);\r\n      setPhoneSize(window.innerWidth <= 768);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <h1>EMS App Documentation</h1>\r\n      </nav>\r\n      <div\r\n        id=\"hamburger\"\r\n        style={{\r\n          right: displaySide ? \"266px\" : \"-8px\",\r\n          display: phoneSize ? \"flex\" : \"none\",\r\n        }}\r\n        onClick={() => {\r\n          setDisplaySide(!displaySide);\r\n        }}\r\n      >\r\n        <svg\r\n          id=\"arrow\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 350 100\"\r\n        >\r\n          <defs>\r\n            <marker\r\n              id=\"startarrow\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"1\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon\r\n                points=\"10 0, 10 7, 0 3.5\"\r\n                fill={displaySide ? \"gray\" : \"#0099FF\"}\r\n              />\r\n            </marker>\r\n            <marker\r\n              id=\"endarrow\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"0\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <polygon\r\n                points=\"0 0, 10 3.5, 0 7\"\r\n                fill={displaySide ? \"#0099FF\" : \"gray\"}\r\n              />\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1=\"100\"\r\n            y1=\"50\"\r\n            x2=\"250\"\r\n            y2=\"50\"\r\n            stroke=\"gray\"\r\n            stroke-width=\"8\"\r\n            marker-end=\"url(#endarrow)\"\r\n            marker-start=\"url(#startarrow)\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <main>\r\n        <article>{children}</article>\r\n        <SideBar isShown={displaySide}></SideBar>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"E:/Coding/ems/ems_documentation/ems-documentation/src/components/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Settings Window`}</h1>\n    <p>{`The settings will be developed later down the road. Feedback on settings idea will be amazing to receive. The idea is to add user settings and hardware settings in that location.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["props","data","useStaticQuery","style","width","isShown","padding","boxShadow","display","to","allFile","nodes","map","value","path","absolutePath","substring","indexOf","name","split","charAt","toUpperCase","join","children","useState","displaySide","setDisplaySide","phoneSize","setPhoneSize","useEffect","handleResize","console","log","window","innerWidth","addEventListener","removeEventListener","id","right","onClick","xmlns","viewBox","markerWidth","markerHeight","refX","refY","orient","points","fill","markerUnits","x1","y1","x2","y2","stroke","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length"],"sourceRoot":""}